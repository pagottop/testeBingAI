foreach (VehicleData vehicle in vehicles)
                {
                    // Extrai as coordenadas do DataTable
                    Dictionary<string, (List<PointD>, string)> polygons = new Dictionary<string, (List<PointD>, string)>();
                    foreach (DataRow row in dt.Rows)
                    {
                        string local = row["Local"].ToString();
                        if (!polygons.ContainsKey(local))
                        {
                            polygons[local] = (new List<PointD>(), vehicle.PositionTime); // Inicialize o campo DateTime com o valor desejado
                        }
                        string[] coordinates = row["Coordenadas"].ToString().Split('|');
                        for (int i = 0; i < coordinates.Length; i += 2)
                        {
                            double lat;
                            double lon;
                            if (double.TryParse(coordinates[i], NumberStyles.Any, CultureInfo.InvariantCulture, out lat)
                                && double.TryParse(coordinates[i + 1], NumberStyles.Any, CultureInfo.InvariantCulture, out lon))
                            {
                                polygons[local].Item1.Add(new PointD(lat, lon));
                            }
                        }
                    }

                    // Verifica se o ponto está dentro de cada polígono
                    DateTime lastTimeInCeasa = DateTime.MinValue;
                    foreach (var kvp in polygons)
                    {
                        string local = kvp.Key;
                        List<PointD> polygonPoints = kvp.Value.Item1;
                        DateTime dataHora = DateTime.Parse(kvp.Value.Item2);
                        dataHora = dataHora.AddHours(-3);
                        string dataHoraFix = dataHora.ToString("dd/MM/yyyy HH:mm:ss");

                        bool isInside = IsPointInPolygon(polygonPoints.ToArray(), new PointD(vehicle.Latitude, vehicle.Longitude));

                        if (isInside)
                        {
                            if (local == "Ceasa")
                            {
                                lastTimeInCeasa = dataHora;
                            }
                        }
                    }
                    if (lastTimeInCeasa != DateTime.MinValue)
                    {
                        Console.WriteLine("A última vez que o carro " + vehicle.VehicleName + " esteve no Ceasa foi em: " + lastTimeInCeasa.ToString("dd/MM/yyyy HH:mm:ss"));
                    }
                }
